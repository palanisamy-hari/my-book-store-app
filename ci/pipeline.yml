resources:
  - name: source-code
    type: git
    icon: git
    check_every: 2m
    source:
      uri: "https://github.com/palanisamy-hari/my-book-store-app.git"
      branch: "main"
      username: ((git-user-name))
      password: ((git-password))

  - name: base-nodejs-image
    type: docker-image
    icon: docker
    check_every: 24h
    source:
      repository: node
      tag: 16-alpine

  - name: image
    type: docker-image
    icon: docker
    check_every: 8760h
    source:
      username: ((docker-user-name))
      password: ((docker-password))
      repository: hariprakashohio/my-node-js-app
      tag: latest

jobs:

  - name: sonar-qualitygate
    serial: true
    plan:
      - in_parallel:
          - get: source-code
            trigger: true
      - task: check-sonarqube-quality-gate
        params:
          SONAR_HOST: ((sonar-host))
          SONAR_TOKEN: ((sonar-token))
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: sonarsource/sonar-scanner-cli
              tag: 4
          inputs:
            - name: source-code
          run:
            path: sh
            dir: source-code
            args:
              - -ec
              - |
                sonar-scanner \
                  -Dsonar.projectKey=book-store \
                  -Dsonar.sources=. \
                  -Dsonar.host.url=$SONAR_HOST \
                  -Dsonar.login=$SONAR_TOKEN

  - name: build-docker-image
    public: true
    build_log_retention:
      days: 7
      builds: 10
    serial: true
    plan:
      - in_parallel:
          - get: source-code
            trigger: true
            passed: [ sonar-qualitygate ]
            params: {depth: 1}
          - get: base-nodejs-image
            params:
              save: true
      - put: build-publish-image
        resource: image
        params:
          load_base: base-nodejs-image
          build: source-code
          build_args:
            BASE_IMAGE: node:16-alpine
        get_params: {skip_download: true}

  - name: deploy-qa-app
    serial: true
    plan:
      - get: source-code
        trigger: true
        passed: [ build-docker-image ]
      - task: deploy-app-heroku
        params:
          HEROKU_EMAIL: ((heroku-email))
          HEROKU_TOKEN: ((heroku-token))
        config:
          platform: linux

          image_resource:
            type: docker-image
            source: { repository: concourse/bosh-cli }

          inputs:
            - name: source-code

          run:
            path: sh
            dir: source-code
            args:
              - -exc
              - |
                cat > /root/.netrc <<EOF
                machine git.heroku.com
                  login $HEROKU_EMAIL
                  password $HEROKU_TOKEN
                EOF
                git push https://git.heroku.com/simple-book-store-app-qa.git main:refs/heads/main

  - name: ruby-ui-test
    serial: true
    public: true
    plan:
      - get: source-code
        trigger: true
        passed: [ deploy-qa-app ]
      - in_parallel:
          - task: run-tests
            params:
              SELENIUM_GRID_HOST: ((selenium-grid-host))
            config:
              image_resource:
                type: registry-image
                source: { repository: hariprakashohio/ruby-test-base, tag: alpine }
              platform: linux
              inputs:
                - name: source-code
              run:
                path: /bin/bash
                args:
                  - -exc
                  - |
                    export SELENIUM_GRID_HOST=$SELENIUM_GRID_HOST
                    cd "source-code/ci/ci-test"
                    bundle exec rake run_test[qa,chrome_remote,@test_case_1]
          - task: run-tests
            params:
              SELENIUM_GRID_HOST: ((selenium-grid-host))
            config:
              image_resource:
                type: registry-image
                source: { repository: hariprakashohio/ruby-test-base, tag: alpine }
              platform: linux
              inputs:
                - name: source-code
              run:
                path: /bin/bash
                args:
                  - -exc
                  - |
                    export SELENIUM_GRID_HOST=$SELENIUM_GRID_HOST
                    cd "source-code/ci/ci-test"
                    bundle exec rake run_test[qa,chrome_remote,@test_case_1]

  - name: deploy-prod-app
    serial: true
    plan:
      - get: source-code
        trigger: true
        passed: [ ruby-ui-test ]
      - task: deploy-app-heroku
        params:
          HEROKU_EMAIL: ((heroku-email))
          HEROKU_TOKEN: ((heroku-token))
        config:
          platform: linux

          image_resource:
            type: docker-image
            source: { repository: concourse/bosh-cli }

          inputs:
            - name: source-code

          run:
            path: sh
            dir: source-code
            args:
              - -exc
              - |
                cat > /root/.netrc <<EOF
                machine git.heroku.com
                  login $HEROKU_EMAIL
                  password $HEROKU_TOKEN
                EOF
                git push https://git.heroku.com/simple-book-store-app.git main:refs/heads/main